= ChinaRegionFu

ChinaRegionFu include the region data of china,and region CURD actions.Got ChinaRegionFu it means you got
a powerfull region controller system about china.
       

== Getting Started

1. Put 'gem china_region_fu' to your Gemfile:

    gem china_region_fu

2. Run bundler command to install the gem:

    bundle install

3. After you install the gem, you need run the generator:

    rails g china_region_fu:install
   
   It will:
   * Generate <em>db/migrate/<timestamp>create_china_region_tables.rb</em> migrate file to your app, *_china_regions_* table is used for store the regions.
   * Copy regions.yml to config/ directory.
   * Run "rake db:migrate".
   * Run "rake region:import".

   Now you have there ActiveRecord modules: <b>Province, City, District</b>.
   
   Run with <em>rails g</em> for get generator list.

4. If you want to customize the region modules you can run the generator:
    rails g china_region_fu:mvc

   This will create:
   
    create  app/models/province.rb
    create  app/models/city.rb
    create  app/models/district.rb

   So you can do what you want to do in this files.
   
5. Examples

    a = Province.last
    a.name                # => "台湾省"
    a.cities.map(&:name)  # => ["嘉义市", "台南市", "新竹市", "台中市", "基隆市", "台北市"]
    
    Province.first.districts.map(&:name) # => ["延庆县", "密云县", "平谷区", ...]
    
    c = City.last
    c.name                # => "酒泉市"
    c.districts.map(&:name) # => ["敦煌市", "玉门市", "阿克塞哈萨克族自治县", "肃北蒙古族自治县", "安西县", ...]
    c.brothers.map(&:name)  # => ["甘南藏族自治州", "临夏回族自治州", "陇南市", ...]

== Contributing

Xuhao <{rubyfans.com}[http://www.rubyfans.com]>.

== License

ChinaRegionFu is released under the MIT license.

